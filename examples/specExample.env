# # # # # # # # # # # # # # 
#                         #
##  STDENV Spec Example  ##
#                         #
# # # # # # # # # # # # # #

# This file contains examples of all of the ways to define 
# environment variables using STDENV. The spec is based on
# the dotenv file format specified by the Dotenvy spec but
# more lax than I suspect Dotenvy to be. (Version: 0.8.0)
# Spec: https://hexdocs.pm/dotenvy/dotenv-file-format.html

# Key-Value pair
HELLO=WORLD

# Optional Export lead
export INCLUDED=This works!

# Key Format: [A-Za-z_]+[0-9A-Za-z_]*
th15_iS_vALiD= But key MUST NOT start with a digit.

# Values:
SIMPLE_VALUE= Trims leading and trailing spaces # and inline comments

SINGLE_VALUE= 'Is surrounded by single quotes. Escape\'s special characters, but no interpolation.'

DOUBLE_VALUE= "Is surrounded by double quotes. Escape\'s special characters. Interpolation: ${INCLUDED}"

MULTILINE_SINGLE='''
This is the first line.
This is the secont line.
Escapes are performed.   # This is not a comment; it will be included verbatim.
But no interpolation.
Just like the single line variant.
''' # This ends the multiline. Only spaces and comments allowed after it.

MULTILINE_DOUBLE="""
This is the first line.
This is the second.
Like its single-line counterpart, interpolation: ${INCLUDED}
For multiline values, the line ending on this line is trimmed.
"""

# Escape Sequences:
New_Line= \n
Carriage_Return= \r
Tab= \t
Form_Feed= \f
Backspace= \b
Double_Quote= \"
Single_Quote= \'
Backslash= \\
Unicode= \u0024 is a dollar sign
Others= Like its Dotenvy counterpart, stdenv treats all other escaped characters literally.

##
#
# Special Circumstances:
#
# - Whitespace is trimmed wherever possible. Technically, there should be no space between the
#   variable name and the equals sign, but this parser accepts it. Recommend doing it properly tho.
#
# - Escapes are processed before substitutions. \u0024\u007BINCLUDED\u007D will output "This works!".
# 
# - Substitutions are taken from the actual environment variables.
#
# - Lines are processed immediately, so previous lines are available for substitution in subsequent ones.
#
# - The max size for a key is 256 bytes. Anything larger will be truncated.
#
# - The max value size is not defined, however the limits will be your system memory and any limits
#   defined elsewhere for the total allowed size of a process's environment in full.
#
##
   export   this  =  technically invalid, but still works. # => this=technically invalid, but still works.

Multiline_invalid='''This is also invalid, but will work.'''

THIS_VARNAME_IS_WAY_TOO_LONG_AND_WILL_BE_TRUNCATED_AT_256_CHARACTERS_AND_AS_SUCH_DEMONSTRATING_THIS_REQUIRES_A_LOT_OF_SCREEN_SPACE_BUT_ITS_THE_UNIX_SPEC_APPARENTLY_AND_WHO_KNOWS_WHY_ANYONE_WOULD_ACTUALLY_WANT_TO_USE_A_KEY_NAME_THIS_LONG_BUT_WE_SHOULD_NEVERTHELESS_CHECK_EVEN_THOUGH_WE_DONT_REALLY=use variables with names this long!

# That's all folks!